buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
        maven {
            url 'https://assets.jukinmedia.com/artifactory'
            credentials {
                username "${jukinRepoUsername}"
                password "${jukinRepoPassword}"
            }
            name = "JukinRepo"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "net.saliman:gradle-cobertura-plugin:2.3.2"
    }
}

plugins {
    id "io.spring.dependency-management" version "0.5.2.RELEASE"
    id "com.jfrog.bintray" version "1.3.1"
}

version "0.9.0"
group "org.grails.plugins.httpbuilderhelper"

apply plugin: 'maven-publish'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "spring-boot"
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-gsp"
apply plugin: "net.saliman.cobertura"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    provided 'org.springframework.boot:spring-boot-starter-logging'
    provided "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-autoconfigure"
    provided "org.springframework.boot:spring-boot-starter-tomcat"

    provided "org.grails:grails-web-boot"
    provided "org.grails:grails-dependencies"
    provided 'javax.servlet:javax.servlet-api:3.1.0'

    testCompile "org.grails:grails-plugin-testing"

    console "org.grails:grails-console"

    compile('org.codehaus.groovy.modules.http-builder:http-builder:0.7.1') {
        exclude module: "commons-logging"
        exclude module: "xml-apis"
        exclude module: "groovy"
        exclude module: "httpclient"
    }
    compile "org.apache.httpcomponents:httpclient:4.5.2"
    compile "org.apache.httpcomponents:httpcore:4.4.5"
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

bintray {
    user = System.getenv("BINTRAY_USER")
    key = System.getenv("BINTRAY_KEY")
    publications = ['maven']
    publish = true
    pkg {
        repo = 'plugins'
        userOrg = 'grails'
        name = "$project.name"
        licenses = ['Apache-2.0']
        desc = 'Grails 3 HTTP Builder Helper Plugin'
        websiteUrl = 'https://github.com/JukinMediaInc/grails-http-builder-helper'
        issueTrackerUrl = 'https://github.com/JukinMediaInc/grails-http-builder-helper/issues'
        vcsUrl = 'https://github.com/JukinMediaInc/grails-http-builder-helper'
        publicDownloadNumbers = true
        attributes = ['http': '', 'rest': '']
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            pom.withXml {
                def pomNode = asNode()
                pomNode.dependencyManagement.replaceNode {}
                pomNode.dependencies.dependency.findAll {
                    it.version.text().isEmpty()
                }.each {
                    it.replaceNode {}
                }
            }
            artifactId project.name
            from components.java
            artifact sourcesJar
            artifact javadocJar
            artifact source:"${sourceSets.main.output.classesDir}/META-INF/grails-plugin.xml",
                     classifier:"plugin",
                     extension:'xml'
        }
    }
    repositories {
        maven { // https://docs.gradle.org/current/dsl/org.gradle.api.artifacts.repositories.MavenArtifactRepository.html
            name 'JukinRepo'
            credentials {
                // put properties jukinRepo* in ~/.gradle/gradle.properties, or provide -D options to Gradle
                username "${jukinRepoUsername}"
                password "${jukinRepoPassword}"
            }
            if (version.endsWith('-SNAPSHOT')) {
                url 'https://assets.jukinmedia.com/artifactory/plugins-snapshot-local'
            } else {
                url 'https://assets.jukinmedia.com/artifactory/plugins-release-local'
            }
        }
    }
}

task install(dependsOn: project.tasks.withType(PublishToMavenLocal))
